{
  "hash": "ab6d0c707bd6497c73e725ca7ac7821c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Graficación de GWAS\"\nformat: html\neditor: visual\n---\n\n\nDurante esta clase veremos como usar data.table para manejar datos de gran tamaño. Por ejemplo los summary statistics de GWAS. Los datos aquí usados se descargaron: [Zenodo MXB](https://zenodo.org/records/7420254) Y son datos del artículo: [Mexican Biobank advances population and medical genomics of diverse ancestries](https://www.nature.com/articles/s41586-023-06560-0) Para hacer este ejercicio sólo utilizaremos el archivo Tryglicerides_INT.imputed.stats.gz que se encuentra dentro de la carpeta full_cohort.\n\n## Procesamiento de datos\n\n### Cargar librería\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\n```\n:::\n\n\n### Lectura de archivos\n\nPrimero leeremos nuestro archivo comprimido, para no ocupar tanto espacio de almacenamiento en nuestras computadoras. También veremos el tiempo que tarda nuestra máquina en leer el archivo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstart.time <- Sys.time()\ntriglycerides <- fread(file = \"/Users/mpalma/Downloads/full_cohort/Glucose_INT.imputed.stats.gz\", header = T)\nend.time <- Sys.time()\n```\n:::\n\n\nAhora, hagamos una pequeña exploración de nuestro archivo:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(triglycerides)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   CHROM GENPOS                 ID ALLELE0 ALLELE1   A1FREQ     INFO     N   TEST       BETA        SE    CHISQ\n   <int>  <int>             <char>  <char>  <char>    <num>    <num> <int> <char>      <num>     <num>    <num>\n1:     1  10894     chr1:10894:G:A       A       G 0.998977 0.103625  4418    ADD  0.3059710 0.9390870 0.106157\n2:     1  10915     chr1:10915:G:A       A       G 0.999336 0.143104  4418    ADD  0.3243080 0.9879230 0.107763\n3:     1  10930     chr1:10930:G:A       A       G 0.996291 0.348130  4418    ADD  0.4716960 0.2689780 3.075330\n4:     1  10989     chr1:10989:G:A       A       G 0.996688 0.256007  4418    ADD -0.1462470 0.3317240 0.194366\n5:     1  11171 chr1:11171:CCTTG:C       C   CCTTG 0.947664 0.270913  4418    ADD  0.0323001 0.0822278 0.154301\n6:     1  23197       rs1220638906       T  TTAAAA 0.992480 0.289927  4418    ADD -0.2011720 0.2076770 0.938331\n            P   LOG10P  EXTRA\n        <num>    <num> <lgcl>\n1: 0.74456223 0.128099     NA\n2: 0.74270612 0.129183     NA\n3: 0.07948771 1.099700     NA\n4: 0.65930748 0.180912     NA\n5: 0.69445802 0.158354     NA\n6: 0.33270705 0.477938     NA\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(triglycerides)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data.table\" \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(triglycerides)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 25454794       15\n```\n\n\n:::\n:::\n\n\nComo podemos ver, tenemos demasiados renglones, más de 25 millones. Las columnas de nuestro archivo:\n\n1.  CHROM\n2.  GENPOS\n3.  ID\n4.  ALLELE0\n5.  ALLELE1\n6.  A1FREQ\n7.  INFO\n8.  N\n9.  TEST\n10. BETA\n11. SE\n12. CHISQ\n13. P\n14. LOG10P\n15. EXTRA\n\n¿Para nuestro GWAS qué columnas necesitamos?\n\n-   CHROM\n-   GENPOS\n-   ID\n-   P\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntriglycerides <- triglycerides[, .(CHROM, GENPOS, ID, P)]\n```\n:::\n\n\nSimplifiquemos los nombres de nuestras columnas\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntriglycerides <- triglycerides[,.(CHR = CHROM, BP=GENPOS , SNP=ID, P)]\n```\n:::\n\n\nPuedes explorar setnames para maneras alternativas de renombrar\n\nReto: ¿Cómo lo harías?\n\nConsideremos que en el caso de los humanos tenemos 22 cromosomas autosomales y cada variante tiene asociada un cromosoma y una posición en dicho cromosomas.\n\n¿Cómo hacemos que estas posiciones se puedan acomodar en el eje de las x?\n\n**Algoritmo**\n\n-   Agrupar nuestros datos por cromosoma y estimar su longitud\n-   Hacer la suma acumulada de las posiciones.\n\nComo puedes notar, no tenemos absolutamente todas las posiciones del genoma humano, pero nos es relevante la posición máxima que tenemos en los cromosomas.\n\n### Agrupar por cromosoma y estimar la longitud\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchr_len <- triglycerides[, .(chr_len = max(BP)), by = CHR]\n```\n:::\n\n\n### Estimar la suma acumulada de la longitud de cromosomas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchr_len[, tot := cumsum(as.numeric(chr_len)) - chr_len]\n```\n:::\n\n\n#### Añador esta informacio al data set original\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncum_triglycerides <- merge(triglycerides, chr_len[, .(CHR, tot)], by = \"CHR\")\n```\n:::\n\n\n#### Añadir la posicion acumulada a cada variante/SNP (Single Nucleotide Polymorphism)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncum_triglycerides <- cum_triglycerides[order(CHR, BP)]\ncum_triglycerides[, BPcum := BP + tot]\n```\n:::\n\n\nTodo parece que va muy bien, pero ¿Creen que sea necesario graficar cada variante? ¿Podemos muestrear al azar? Mejor usamos p-value.\n\n### Muestrear sin remplazo de manera aleatoria 1 de cada 200 variantes con P-value \\> 0.01\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123) # Establecer una semilla para reproducibilidad\nsampled_high_p <- cum_triglycerides[P > 0.01][sample(.N, .N / 200)]\nlow_p_data <- cum_triglycerides[P <= 0.01]\n\n# Combinar ambos conjuntos de datos\nsampled_data <- rbind(low_p_data, sampled_high_p)\n```\n:::\n\n\n## Graficación\n\n### Cargar librería\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(scales)\n```\n:::\n\n\nPara el eje de las x hay que estimar la posición central para cada cromosoma de acuerdo a las posiciones de cada cromosoma\n\n\n::: {.cell}\n\n```{.r .cell-code}\naxisdf <- cum_triglycerides[, .(center = (max(BPcum) + min(BPcum)) / 2), by = CHR]\n```\n:::\n\n\n### Manhattan plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nManhattan_plot <- ggplot(sampled_data, aes(x=BPcum, y=-log10(P))) +\n  \n  # Graficar los puntos y azul y gris intercalado por cromosoma\n  geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=0.5) +\n  scale_color_manual(values = rep(c(\"grey\", \"skyblue\"), 22 )) +\n  \n  # Personalizar ejes\n  scale_x_continuous( label = axisdf$CHR, breaks= axisdf$center ) +\n  scale_y_continuous(expand = c(0, 0), labels=number_format(accuracy = 0.1) , limits=c(0,25))  +\n  \n  #### Añadir líneas de significancia\n  geom_hline(yintercept=-log10(1e-5), color = \"black\", linetype=\"dotted\", linewidth=0.3) +\n  geom_hline(yintercept=-log10(5e-8), color = \"black\", linetype=\"dashed\", linewidth=0.3) +\n  \n  #### Añadir título\n  \n  ggtitle(\"Glucose\")+\n  \n  # Detalles de tema:\n  theme_bw() +\n  theme( \n    legend.position=\"none\",\n    panel.border = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    #axis.ticks.x = element_blank(),\n    #axis.text.x =   element_blank(),\n    axis.title.x = element_blank()\n  )\n```\n:::\n\n\n### Guardar la imagen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"/Users/mpalma/Downloads/Manhattan_viernesbioinfo.png\", plot = Manhattan_plot)\n```\n:::\n\n\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(Manhattan_plot)\n```\n\n::: {.cell-output-display}\n![](Graficacion_GWAS_files/figure-html/unnamed-chunk-15-1.png){width=768}\n:::\n:::\n\n\nAhora te toca a ti, realiza una gráfica similar para otro trait, en esta ocasión que el eje y no esté invertido y se muestre el número de cromosoma en el eje x. ",
    "supporting": [
      "Graficacion_GWAS_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}